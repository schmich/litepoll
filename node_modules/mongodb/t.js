// var MongoClient = require('./').MongoClient
//   , f = require('util').format;

// MongoClient.connect('mongodb://localhost:27017/test', function(err, db) {
//   var col = db.collection('t');

//   setInterval(function() {
//     col.insert({a:1}, function(err, r) {
//       console.log("------------------ insert")
//       console.log(err)

//       col.findOne({}, function(err, doc) {
//         console.log("------------------ findOne")
//         console.log(err)
//       });
//     })
//   }, 500)
// });

var MongoClient = require('./').MongoClient
  , f = require('util').format;

MongoClient.connect('mongodb://localhost:27017/test', function(err, db) {
  db.collection('t').insert({a:1}, function() {
    db.collectionNames(function(x, names) {
      console.dir(names)
      db.close();
    })
  })
  // var cursor = db.collection('t').find({}).maxTimeMS(1000);
  // cursor.toArray(function(err, docs) {
  //   console.dir(docs)
  //   db.close();
  // });
});

// MongoClient.connect('mongodb://localhost:27017/test?autoReconnect=false', {
//     db: { bufferMaxEntries: 0 }
//   }, function(err, db) {
//   var col = db.collection('t');

//   setInterval(function() {
//     col.insert({a:1}, function(err, r) {
//       console.log("------------------ insert")
//       console.log(err)

//       col.findOne({}, function(err, doc) {
//         console.log("------------------ findOne")
//         console.log(err)
//       });
//     })
//   }, 1000)
// });

















// var ObjectId = require('./').ObjectId
// var b = new Buffer("aaaaaaaaaaaa")
// b[0]= 0
// var id = new ObjectId(b.toString());
// console.log(id)
// var Collection = require('./').Collection
//   , MongoClient = require('./').MongoClient
//   , f = require('util').format;

// var findOne = Collection.prototype.findOne;
// Collection.prototype.findOne = function() {
//   var startTime = new Date().getTime();
//   // Get all the passed in arguments as an array
//   var args = Array.prototype.slice.call(arguments, 0);
//   // Get the callback at the end of the function
//   var callback = args.pop();
//   // Push our own callback handler that calls the original 
//   // callback after finishing up it's goals
//   args.push(function(err, r) {
//     var endTime = new Date().getTime();
//     console.log(f("findOne took %s milliseconds", (endTime - startTime)))
//     callback(err, r)
//   });

//   // Call the original prototype method findOne on this instance
//   findOne.apply(this, args);
// }

// MongoClient.connect('mongodb://localhost:27017/test', function(err, db) {

//   db.collection('t').findOne({}, function(err, r) {
//     db.close();
//   });
// });

// console.dir(Collection.prototype)